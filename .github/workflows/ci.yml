name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_BASE_URL: http://localhost:3050
      CI: true
      NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
      NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: ${{ secrets.STACK_PUBLISHABLE_CLIENT_KEY }}
      STACK_SECRET_SERVER_KEY: ${{ secrets.STACK_SECRET_SERVER_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
      PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID }}
      PAYPAL_SECRET: ${{ secrets.PAYPAL_SECRET }}
      PAYPAL_ENV: ${{ secrets.PAYPAL_ENV }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: npm ci

      - name: Lint (non-blocking)
        run: npm run lint --silent || true

      - name: Unit tests (Vitest)
        run: npm run test

      - name: Install Playwright Browsers (all)
        run: npx playwright install --with-deps

      - name: E2E tests (Chromium)
        run: npx playwright test --project=chromium

      - name: E2E tests (iPhone 12)
        run: npx playwright test --project=iphone-12

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore
